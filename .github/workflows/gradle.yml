# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build_test:

    runs-on: ubuntu-latest
    strategy:
          matrix:
            java-version: [8.x]
            gradle-version: [6.5]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    - name: setup Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        gradle-version: ${{ matrix.gradle-version }}
        
    - name: Execute Gradle build
      run: ./gradlew build





  analyze:
        if: github.actor!= 'dependabot[bot]'
        name: Analyze code
        runs-on: ubuntu-latest
        needs: [build_test]
        permissions:
          actions: read
          contents: read
          security-events: write
          
  
        strategy:
          fail-fast: false
          matrix:
            language: [ 'java' ]
            # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
  
        steps:
        
        - name: short-sha
          uses: benjlevesque/short-sha@v2.2
          env:
            SHA: ${{ steps.short-sha.outputs.sha }}
            
        - name: notify analyze started
          uses: rjstone/discord-webhook-notify@v1
          with:
              severity: info
              color: '#FFFFFF'
              details: Analyze stage started!
              footer: HORRAI!
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
  
  
    
        - name: Checkout repository
          uses: actions/checkout@v3
  
        # Initializes the CodeQL tools for scanning.
        - name: Initialize CodeQL
          uses: github/codeql-action/init@v2
          with:
            languages: ${{ matrix.language }}
            # If you wish to specify custom queries, you can do so here or in a config file.
            # By default, queries listed here will override any specified in a config file.
            # Prefix the list here with "+" to use these queries and those in the config file.
            # queries: ./path/to/local/query, your-org/your-repo/queries@main
  
        # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
        # If this step fails, then you should remove it and run the build manually (see below)
        - name: Autobuild
          uses: github/codeql-action/autobuild@v2
  
    
        # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines
        #    and modify them (or add more) to build your code if your project
        #    uses a compiled language
  
        #- run: |
        #   make bootstrap
        #   make release
  
        - name: Perform CodeQL Analysis
          uses:  github/codeql-action/analyze@v2
  
          
  
        - name: notify analyze Stage Succeeded
          uses: rjstone/discord-webhook-notify@v1
          if: success()
          with:
              severity: info
              details: Analyze stage Succeeded on Branch ${{ github.head_ref }}!
              footer: sha ${{ env.SHA }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          env:
            SHA: ${{ env.SHA }}
        - name: Test Failure
          uses: rjstone/discord-webhook-notify@v1
          if: failure()
          with:
              severity: error
              details: Analyze stage Failed on Branch ${{ github.head_ref }}!
              footer: sha ${{ env.SHA }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          env:
            SHA: ${{ env.SHA }}
        - name: Test Cancelled
          uses: rjstone/discord-webhook-notify@v1
          if: cancelled()
          with:
              severity: warn
              details: Analyze Cancelled!
              footer: sha ${{ env.SHA }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          env:
              SHA: ${{ env.SHA }}






  lint:
      if: github.actor!= 'dependabot[bot]'
      defaults:
        run:
          shell: bash
              
      needs: [build_test]
      runs-on: ubuntu-latest
      steps:    
        - name: short-sha
          uses: benjlevesque/short-sha@v2.2
          env:
            SHA: ${{ steps.short-sha.outputs.sha }}
            

        - name: notify lint started
          uses: rjstone/discord-webhook-notify@v1
          with:
              severity: info
              color: '#FFFFFF'
              details:  Lint stage started!
              footer: HORRAI!
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}

              
    


        - uses: actions/checkout@v3
          name: 'Checkout repository'
  
  
        ################################
        # Run Linter against code base #
        ################################
        - name: Lint Code Base
          uses: super-linter/super-linter/slim@v5
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            DISABLE_ERRORS: true


  

        - name: notify Frontend  lint Stage Succeeded
          uses: rjstone/discord-webhook-notify@v1
          if: success()
          with:
              severity: info
              details: Lint stage Succeeded on Branch ${{ github.head_ref }}!
              footer: sha ${{ env.SHA }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          env:
            SHA: ${{ env.SHA }}
              
        - name: Test Failure
          uses: rjstone/discord-webhook-notify@v1
          if: failure()
          with:
              severity: error
              details: Lint stage Failed on Branch ${{ github.head_ref }}!
              footer: sha ${{ env.SHA }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          env:
            SHA: ${{ env.SHA }}
            
        - name: Test Cancelled
          uses: rjstone/discord-webhook-notify@v1
          if: cancelled()
          with:
              severity: warn
              details: Lint Cancelled!
              footer: sha ${{ env.SHA }}
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL }}
          env:
            SHA: ${{ env.SHA }}




  publish-pacakge:
    
    if: github.actor!= 'dependabot[bot]'
    runs-on: ubuntu-latest  
    needs: [build_test,analyze,lint]
    strategy:
        matrix:
          java-version: [8.x]
        
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    # the publishing section of your build.gradle
    - name: Publish to GitHub Packages
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: publish
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # publish-docker-image:
  
  #   runs-on: ubuntu-latest
  #   strategy:
  #       matrix:
  #         java-version: [8.x]

  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: Login to GitHub Container Registry
  #     uses: docker/login-action@v3
  #     with:
  #       registry: ghcr.io
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}
        
  #   - name: build docker image
  #     run: |
  #          docker build . --tag ghcr.io/MegaDevelopment/Egy-Eats-Restaurants:latest
  #          docker run ghcr.io/MegaDevelopment/Egy-Eats-Restaurants:latest
  #          docker push ghcr.io/MegaDevelopment/Egy-Eats-Restaurants:latest


           


          
